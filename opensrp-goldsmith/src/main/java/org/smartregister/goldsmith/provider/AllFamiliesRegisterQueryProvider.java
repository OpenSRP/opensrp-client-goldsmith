package org.smartregister.goldsmith.provider;

import android.text.TextUtils;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;

import org.smartregister.configuration.ModuleRegisterQueryProviderContract;
import org.smartregister.pojo.InnerJoinObject;
import org.smartregister.pojo.QueryTable;

public class AllFamiliesRegisterQueryProvider extends ModuleRegisterQueryProviderContract {
    @NonNull
    @Override
    public String getObjectIdsQuery(@Nullable String filters, @Nullable String s1) {
        if (TextUtils.isEmpty(filters)) {
            return "SELECT object_id FROM (SELECT object_id, last_interacted_with FROM ec_family_search WHERE  date_removed is NULL AND (entity_type is NULL OR entity_type = 'ec_family')) ORDER BY last_interacted_with DESC";
        } else {
            return "SELECT object_id FROM (SELECT object_id, last_interacted_with FROM ec_family_search WHERE  date_removed is NULL AND (entity_type is NULL OR entity_type = 'ec_family') AND PHRASE MATCH '"
                    + filters
                    + "*') ORDER BY last_interacted_with DESC";
        }
        //return CoreReferralUtils.getFamilyMemberFtsSearchQuery(filters);
    }

    @NonNull
    @Override
    public String[] countExecuteQueries(@Nullable String s, @Nullable String s1) {
        //return new String[]{"/**COUNT REGISTERED CHILD CLIENTS*/\nSELECT COUNT(*) AS c\n         FROM ec_child\n                  inner join ec_family_member on ec_family_member.base_entity_id = ec_child.base_entity_id\n                  inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\n         WHERE ec_family_member.is_closed = '0'\n           AND ec_family_member.date_removed is null\n           AND cast(strftime('%Y-%m-%d %H:%M:%S', 'now') - strftime('%Y-%m-%d %H:%M:%S', ec_child.dob) as int) > 0", "/**COUNT REGISTERED ANC CLIENTS*/\nSELECT COUNT(*)\n         FROM ec_anc_register\n                  inner join ec_family_member on ec_family_member.base_entity_id = ec_anc_register.base_entity_id\n                  inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\n         where ec_family_member.date_removed is null\n           and ec_anc_register.is_closed is 0", "/**COUNT REGISTERED PNC CLIENTS*/\nSELECT COUNT(*)\n         FROM ec_pregnancy_outcome\n                  inner join ec_family_member on ec_family_member.base_entity_id = ec_pregnancy_outcome.base_entity_id\n                  inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\n         where ec_family_member.date_removed is null\n           and ec_pregnancy_outcome.is_closed is 0\n           AND ec_pregnancy_outcome.base_entity_id NOT IN\n               (SELECT base_entity_id FROM ec_anc_register WHERE ec_anc_register.is_closed IS 0)", "/*COUNT OTHER FAMILY MEMBERS*/\nSELECT  COUNT(*)\nFROM ec_family_member\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\nwhere ec_family_member.date_removed is null\n  AND (ec_family.entity_type = 'ec_family' OR ec_family.entity_type is null)\n  AND ec_family_member.base_entity_id NOT IN (\n    SELECT ec_anc_register.base_entity_id AS base_entity_id\n    FROM ec_anc_register\n    UNION ALL\n    SELECT ec_pregnancy_outcome.base_entity_id AS base_entity_id\n    FROM ec_pregnancy_outcome\n    UNION ALL\n    SELECT ec_child.base_entity_id AS base_entity_id\n    FROM ec_child\n    UNION ALL\n    SELECT ec_malaria_confirmation.base_entity_id AS base_entity_id\n    FROM ec_malaria_confirmation\n    UNION ALL\n    SELECT ec_family_planning.base_entity_id AS base_entity_id\n    FROM ec_family_planning\n)", "/*COUNT INDEPENDENT MEMBERS*/\nSELECT  COUNT(*)\nFROM ec_family_member\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\nwhere ec_family_member.date_removed is null\n  AND ec_family.entity_type = 'ec_independent_client'\n  AND ec_family_member.base_entity_id NOT IN (\n    SELECT ec_anc_register.base_entity_id AS base_entity_id\n    FROM ec_anc_register\n    UNION ALL\n    SELECT ec_pregnancy_outcome.base_entity_id AS base_entity_id\n    FROM ec_pregnancy_outcome\n    UNION ALL\n    SELECT ec_child.base_entity_id AS base_entity_id\n    FROM ec_child\n    UNION ALL\n    SELECT ec_malaria_confirmation.base_entity_id AS base_entity_id\n    FROM ec_malaria_confirmation\n    UNION ALL\n    SELECT ec_family_planning.base_entity_id AS base_entity_id\n    FROM ec_family_planning\n)", "/**COUNT REGISTERED MALARIA CLIENTS*/\nSELECT COUNT(*)\nFROM ec_family_member\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\n         inner join ec_malaria_confirmation on ec_family_member.base_entity_id = ec_malaria_confirmation.base_entity_id\nwhere ec_family_member.date_removed is null\n  AND ec_family_member.base_entity_id NOT IN (\n    SELECT ec_anc_register.base_entity_id AS base_entity_id\n    FROM ec_anc_register\n    UNION ALL\n    SELECT ec_pregnancy_outcome.base_entity_id AS base_entity_id\n    FROM ec_pregnancy_outcome\n    UNION ALL\n    SELECT ec_child.base_entity_id AS base_entity_id\n    FROM ec_child\n    UNION ALL\n    SELECT ec_family_planning.base_entity_id AS base_entity_id\n    FROM ec_family_planning\n)", "/**COUNT FAMILY_PLANNING CLIENTS*/\nSELECT COUNT(*)\nFROM ec_family_member\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\n         inner join ec_family_planning on ec_family_member.base_entity_id = ec_family_planning.base_entity_id\nwhere ec_family_member.date_removed is null\n  AND ec_family_member.base_entity_id NOT IN (\n    SELECT ec_anc_register.base_entity_id AS base_entity_id\n    FROM ec_anc_register\n    UNION ALL\n    SELECT ec_pregnancy_outcome.base_entity_id AS base_entity_id\n    FROM ec_pregnancy_outcome\n    UNION ALL\n    SELECT ec_child.base_entity_id AS base_entity_id\n    FROM ec_child\n    UNION ALL\n    SELECT ec_malaria_confirmation.base_entity_id AS base_entity_id\n    FROM ec_malaria_confirmation\n)"};
        return new String[]{"SELECT COUNT(object_id) FROM ec_family_search WHERE  date_removed is NULL AND (entity_type is NULL OR entity_type = 'ec_family')"};
    }

    @NonNull
    @Override
    public String mainSelectWhereIDsIn() {
        //return "/* ANC REGISTER */\nSELECT ec_family_member.first_name          AS first_name,\n       ec_family_member.middle_name         AS middle_name,\n       ec_family_member.last_name           AS last_name,\n       ec_family_member.gender              AS gender,\n       ec_family_member.dob                 AS dob,\n       ec_family_member.base_entity_id      AS base_entity_id,\n       ec_family_member.id                  as _id,\n       'ANC'                                AS register_type,\n       ec_family_member.relational_id       as relationalid,\n       ec_family.village_town               as home_address,\n       ec_anc_register.last_interacted_with AS last_interacted_with,\n       NULL                                 AS mother_first_name,\n       NULL                                 AS mother_last_name,\n       NULL                                 AS mother_middle_name\nFROM ec_anc_register\n         inner join ec_family_member on ec_family_member.base_entity_id = ec_anc_register.base_entity_id\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\nwhere ec_family_member.date_removed is null\n  and ec_anc_register.is_closed is 0\n  and ec_anc_register.base_entity_id IN (%s)\n\nUNION ALL\n\n/* PNC REGISTER */\n\nSELECT ec_family_member.first_name               AS first_name,\n       ec_family_member.middle_name              AS middle_name,\n       ec_family_member.last_name                AS last_name,\n       ec_family_member.gender                   AS gender,\n       ec_family_member.dob                      AS dob,\n       ec_family_member.base_entity_id           AS base_entity_id,\n       ec_family_member.id                       as _id,\n       'PNC'                                     AS register_type,\n       ec_family_member.relational_id            as relationalid,\n       ec_family.village_town                    as home_address,\n       ec_pregnancy_outcome.last_interacted_with AS last_interacted_with,\n       NULL                                      AS mother_first_name,\n       NULL                                      AS mother_last_name,\n       NULL                                      AS mother_middle_name\nFROM ec_pregnancy_outcome\n         inner join ec_family_member on ec_family_member.base_entity_id = ec_pregnancy_outcome.base_entity_id\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\nwhere ec_family_member.date_removed is null\n  and ec_pregnancy_outcome.is_closed is 0\n  AND ec_pregnancy_outcome.base_entity_id NOT IN\n      (SELECT base_entity_id FROM ec_anc_register WHERE ec_anc_register.is_closed IS 0)\n  AND ec_pregnancy_outcome.base_entity_id IN (%s)\n\nUNION ALL\n/* CHILD REGISTER */\n\nSELECT ec_family_member.first_name     AS first_name,\n       ec_family_member.middle_name    AS middle_name,\n       ec_family_member.last_name      AS last_name,\n       ec_family_member.gender         AS gender,\n       ec_family_member.dob            AS dob,\n       ec_family_member.base_entity_id AS base_entity_id,\n       ec_family_member.id             as _id,\n       'Child'                         AS register_type,\n       ec_family_member.relational_id  as relationalid,\n       ec_family.village_town          as home_address,\n       ec_child.last_interacted_with   AS last_interacted_with,\n       ec_child.mother_first_name      AS mother_first_name,\n       ec_child.mother_middle_name     AS mother_middle_name,\n       ec_child.mother_last_name       AS mother_last_name\nFROM (SELECT ec_child.*,\n             mother.first_name  AS mother_first_name,\n             mother.last_name   AS mother_last_name,\n             mother.middle_name AS mother_middle_name\n      FROM ec_child\n               inner join ec_family on ec_family.base_entity_id = ec_child.relational_id\n               INNER JOIN ec_family_member AS mother ON ec_family.primary_caregiver = mother.base_entity_id\n     ) ec_child\n         inner join ec_family_member on ec_family_member.base_entity_id = ec_child.base_entity_id\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\nWHERE ec_family_member.is_closed = '0'\n  AND ec_family_member.date_removed is null\n  AND cast(strftime('%Y-%m-%d %H:%M:%S', 'now') - strftime('%Y-%m-%d %H:%M:%S', ec_child.dob) as int) > 0\n  AND ec_child.base_entity_id IN (%s)\n\nUNION ALL\n/*OTHER FAMILY MEMBERS*/\nSELECT ec_family_member.first_name,\n       ec_family_member.middle_name,\n       ec_family_member.last_name,\n       ec_family_member.gender,\n       ec_family_member.dob,\n       ec_family_member.base_entity_id,\n       ec_family_member.id                   as _id,\n       NULL                                  AS register_type,\n       ec_family_member.relational_id        as relationalid,\n       ec_family.village_town                as home_address,\n       NULL                                  AS mother_first_name,\n       NULL                                  AS mother_last_name,\n       NULL                                  AS mother_middle_name,\n       ec_family_member.last_interacted_with AS last_interacted_with\nFROM ec_family_member\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\nwhere ec_family_member.date_removed is null\n  AND (ec_family.entity_type = 'ec_family' OR ec_family.entity_type is null)\n  AND ec_family_member.base_entity_id IN (%s)\n  AND ec_family_member.base_entity_id NOT IN (\n    SELECT ec_anc_register.base_entity_id AS base_entity_id\n    FROM ec_anc_register\n    UNION ALL\n    SELECT ec_pregnancy_outcome.base_entity_id AS base_entity_id\n    FROM ec_pregnancy_outcome\n    UNION ALL\n    SELECT ec_child.base_entity_id AS base_entity_id\n    FROM ec_child\n    UNION ALL\n    SELECT ec_malaria_confirmation.base_entity_id AS base_entity_id\n    FROM ec_malaria_confirmation\n    UNION ALL\n    SELECT ec_family_planning.base_entity_id AS base_entity_id\n    FROM ec_family_planning\n)\nUNION ALL\n/*INDEPENDENT MEMBERS*/\nSELECT ec_family_member.first_name,\n       ec_family_member.middle_name,\n       ec_family_member.last_name,\n       ec_family_member.gender,\n       ec_family_member.dob,\n       ec_family_member.base_entity_id,\n       ec_family_member.id                   as _id,\n       'Independent'                         AS register_type,\n       ec_family_member.relational_id        as relationalid,\n       ec_family.village_town                as home_address,\n       NULL                                  AS mother_first_name,\n       NULL                                  AS mother_last_name,\n       NULL                                  AS mother_middle_name,\n       ec_family_member.last_interacted_with AS last_interacted_with\nFROM ec_family_member\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\nwhere ec_family_member.date_removed is null\n  AND ec_family.entity_type = 'ec_independent_client'\n  AND ec_family_member.base_entity_id IN (%s)\n  AND ec_family_member.base_entity_id NOT IN (\n    SELECT ec_anc_register.base_entity_id AS base_entity_id\n    FROM ec_anc_register\n    UNION ALL\n    SELECT ec_pregnancy_outcome.base_entity_id AS base_entity_id\n    FROM ec_pregnancy_outcome\n    UNION ALL\n    SELECT ec_child.base_entity_id AS base_entity_id\n    FROM ec_child\n    UNION ALL\n    SELECT ec_malaria_confirmation.base_entity_id AS base_entity_id\n    FROM ec_malaria_confirmation\n    UNION ALL\n    SELECT ec_family_planning.base_entity_id AS base_entity_id\n    FROM ec_family_planning\n)UNION ALL/*ONLY MALARIA PATIENTS*/\nSELECT ec_family_member.first_name,\n       ec_family_member.middle_name,\n       ec_family_member.last_name,\n       ec_family_member.gender,\n       ec_family_member.dob,\n       ec_family_member.base_entity_id,\n       ec_family_member.id                          as _id,\n       'Malaria'                                    AS register_type,\n       ec_family_member.relational_id               as relationalid,\n       ec_family.village_town                       as home_address,\n       NULL                                         AS mother_first_name,\n       NULL                                         AS mother_last_name,\n       NULL                                         AS mother_middle_name,\n       ec_malaria_confirmation.last_interacted_with AS last_interacted_with\nFROM ec_family_member\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\n         inner join ec_malaria_confirmation\n                    on ec_family_member.base_entity_id = ec_malaria_confirmation.base_entity_id\nwhere ec_family_member.date_removed is null\n  AND ec_family_member.base_entity_id IN (%s)\n  AND ec_family_member.base_entity_id NOT IN (\n    SELECT ec_anc_register.base_entity_id AS base_entity_id\n    FROM ec_anc_register\n    UNION ALL\n    SELECT ec_pregnancy_outcome.base_entity_id AS base_entity_id\n    FROM ec_pregnancy_outcome\n    UNION ALL\n    SELECT ec_child.base_entity_id AS base_entity_id\n    FROM ec_child\n    UNION ALL\n    SELECT ec_family_planning.base_entity_id AS base_entity_id\n    FROM ec_family_planning\n)\nUNION ALL\n\n/*ONLY FAMILY PLANNING PATIENTS*/\nSELECT ec_family_member.first_name,\n       ec_family_member.middle_name,\n       ec_family_member.last_name,\n       ec_family_member.gender,\n       ec_family_member.dob,\n       ec_family_member.base_entity_id,\n       ec_family_member.id                          as _id,\n       'Family Planning'                             AS register_type,\n       ec_family_member.relational_id               as relationalid,\n       ec_family.village_town                       as home_address,\n       NULL                                         AS mother_first_name,\n       NULL                                         AS mother_last_name,\n       NULL                                         AS mother_middle_name,\n       ec_family_planning.last_interacted_with AS last_interacted_with\nFROM ec_family_member\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\n         inner join ec_family_planning\n                    on ec_family_member.base_entity_id = ec_family_planning.base_entity_id\nwhere ec_family_member.date_removed is null\n  AND ec_family_planning.is_closed is 0\n  AND ec_family_member.base_entity_id IN (%s)\n  AND ec_family_member.base_entity_id NOT IN (\n    SELECT ec_anc_register.base_entity_id AS base_entity_id\n    FROM ec_anc_register\n    UNION ALL\n    SELECT ec_pregnancy_outcome.base_entity_id AS base_entity_id\n    FROM ec_pregnancy_outcome\n    UNION ALL\n    SELECT ec_child.base_entity_id AS base_entity_id\n    FROM ec_child\n    UNION ALL\n    SELECT ec_malaria_confirmation.base_entity_id AS base_entity_id\n    FROM ec_malaria_confirmation\n)\nORDER BY last_interacted_with DESC;";
        return "Select ec_family.id as _id , ec_family.relationalid , ec_family.last_interacted_with , ec_family.base_entity_id , ec_family.first_name , ec_family.last_name , ec_family.unique_id , ec_family.village_town , ec_family.family_head , ec_family.primary_caregiver FROM ec_family  WHERE id IN (%s)";
    }

    @Override
    public String mainSelectWhereIdsIn(@NonNull InnerJoinObject[] innerJoinObjects, @NonNull QueryTable[] queryTables) {
        //return "/* ANC REGISTER */\nSELECT ec_family_member.first_name          AS first_name,\n       ec_family_member.middle_name         AS middle_name,\n       ec_family_member.last_name           AS last_name,\n       ec_family_member.gender              AS gender,\n       ec_family_member.dob                 AS dob,\n       ec_family_member.base_entity_id      AS base_entity_id,\n       ec_family_member.id                  as _id,\n       'ANC'                                AS register_type,\n       ec_family_member.relational_id       as relationalid,\n       ec_family.village_town               as home_address,\n       ec_anc_register.last_interacted_with AS last_interacted_with,\n       NULL                                 AS mother_first_name,\n       NULL                                 AS mother_last_name,\n       NULL                                 AS mother_middle_name\nFROM ec_anc_register\n         inner join ec_family_member on ec_family_member.base_entity_id = ec_anc_register.base_entity_id\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\nwhere ec_family_member.date_removed is null\n  and ec_anc_register.is_closed is 0\n  and ec_anc_register.base_entity_id IN (%s)\n\nUNION ALL\n\n/* PNC REGISTER */\n\nSELECT ec_family_member.first_name               AS first_name,\n       ec_family_member.middle_name              AS middle_name,\n       ec_family_member.last_name                AS last_name,\n       ec_family_member.gender                   AS gender,\n       ec_family_member.dob                      AS dob,\n       ec_family_member.base_entity_id           AS base_entity_id,\n       ec_family_member.id                       as _id,\n       'PNC'                                     AS register_type,\n       ec_family_member.relational_id            as relationalid,\n       ec_family.village_town                    as home_address,\n       ec_pregnancy_outcome.last_interacted_with AS last_interacted_with,\n       NULL                                      AS mother_first_name,\n       NULL                                      AS mother_last_name,\n       NULL                                      AS mother_middle_name\nFROM ec_pregnancy_outcome\n         inner join ec_family_member on ec_family_member.base_entity_id = ec_pregnancy_outcome.base_entity_id\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\nwhere ec_family_member.date_removed is null\n  and ec_pregnancy_outcome.is_closed is 0\n  AND ec_pregnancy_outcome.base_entity_id NOT IN\n      (SELECT base_entity_id FROM ec_anc_register WHERE ec_anc_register.is_closed IS 0)\n  AND ec_pregnancy_outcome.base_entity_id IN (%s)\n\nUNION ALL\n/* CHILD REGISTER */\n\nSELECT ec_family_member.first_name     AS first_name,\n       ec_family_member.middle_name    AS middle_name,\n       ec_family_member.last_name      AS last_name,\n       ec_family_member.gender         AS gender,\n       ec_family_member.dob            AS dob,\n       ec_family_member.base_entity_id AS base_entity_id,\n       ec_family_member.id             as _id,\n       'Child'                         AS register_type,\n       ec_family_member.relational_id  as relationalid,\n       ec_family.village_town          as home_address,\n       ec_child.last_interacted_with   AS last_interacted_with,\n       ec_child.mother_first_name      AS mother_first_name,\n       ec_child.mother_middle_name     AS mother_middle_name,\n       ec_child.mother_last_name       AS mother_last_name\nFROM (SELECT ec_child.*,\n             mother.first_name  AS mother_first_name,\n             mother.last_name   AS mother_last_name,\n             mother.middle_name AS mother_middle_name\n      FROM ec_child\n               inner join ec_family on ec_family.base_entity_id = ec_child.relational_id\n               INNER JOIN ec_family_member AS mother ON ec_family.primary_caregiver = mother.base_entity_id\n     ) ec_child\n         inner join ec_family_member on ec_family_member.base_entity_id = ec_child.base_entity_id\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\nWHERE ec_family_member.is_closed = '0'\n  AND ec_family_member.date_removed is null\n  AND cast(strftime('%Y-%m-%d %H:%M:%S', 'now') - strftime('%Y-%m-%d %H:%M:%S', ec_child.dob) as int) > 0\n  AND ec_child.base_entity_id IN (%s)\n\nUNION ALL\n/*OTHER FAMILY MEMBERS*/\nSELECT ec_family_member.first_name,\n       ec_family_member.middle_name,\n       ec_family_member.last_name,\n       ec_family_member.gender,\n       ec_family_member.dob,\n       ec_family_member.base_entity_id,\n       ec_family_member.id                   as _id,\n       NULL                                  AS register_type,\n       ec_family_member.relational_id        as relationalid,\n       ec_family.village_town                as home_address,\n       NULL                                  AS mother_first_name,\n       NULL                                  AS mother_last_name,\n       NULL                                  AS mother_middle_name,\n       ec_family_member.last_interacted_with AS last_interacted_with\nFROM ec_family_member\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\nwhere ec_family_member.date_removed is null\n  AND (ec_family.entity_type = 'ec_family' OR ec_family.entity_type is null)\n  AND ec_family_member.base_entity_id IN (%s)\n  AND ec_family_member.base_entity_id NOT IN (\n    SELECT ec_anc_register.base_entity_id AS base_entity_id\n    FROM ec_anc_register\n    UNION ALL\n    SELECT ec_pregnancy_outcome.base_entity_id AS base_entity_id\n    FROM ec_pregnancy_outcome\n    UNION ALL\n    SELECT ec_child.base_entity_id AS base_entity_id\n    FROM ec_child\n    UNION ALL\n    SELECT ec_malaria_confirmation.base_entity_id AS base_entity_id\n    FROM ec_malaria_confirmation\n    UNION ALL\n    SELECT ec_family_planning.base_entity_id AS base_entity_id\n    FROM ec_family_planning\n)\nUNION ALL\n/*INDEPENDENT MEMBERS*/\nSELECT ec_family_member.first_name,\n       ec_family_member.middle_name,\n       ec_family_member.last_name,\n       ec_family_member.gender,\n       ec_family_member.dob,\n       ec_family_member.base_entity_id,\n       ec_family_member.id                   as _id,\n       'Independent'                         AS register_type,\n       ec_family_member.relational_id        as relationalid,\n       ec_family.village_town                as home_address,\n       NULL                                  AS mother_first_name,\n       NULL                                  AS mother_last_name,\n       NULL                                  AS mother_middle_name,\n       ec_family_member.last_interacted_with AS last_interacted_with\nFROM ec_family_member\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\nwhere ec_family_member.date_removed is null\n  AND ec_family.entity_type = 'ec_independent_client'\n  AND ec_family_member.base_entity_id IN (%s)\n  AND ec_family_member.base_entity_id NOT IN (\n    SELECT ec_anc_register.base_entity_id AS base_entity_id\n    FROM ec_anc_register\n    UNION ALL\n    SELECT ec_pregnancy_outcome.base_entity_id AS base_entity_id\n    FROM ec_pregnancy_outcome\n    UNION ALL\n    SELECT ec_child.base_entity_id AS base_entity_id\n    FROM ec_child\n    UNION ALL\n    SELECT ec_malaria_confirmation.base_entity_id AS base_entity_id\n    FROM ec_malaria_confirmation\n    UNION ALL\n    SELECT ec_family_planning.base_entity_id AS base_entity_id\n    FROM ec_family_planning\n)UNION ALL/*ONLY MALARIA PATIENTS*/\nSELECT ec_family_member.first_name,\n       ec_family_member.middle_name,\n       ec_family_member.last_name,\n       ec_family_member.gender,\n       ec_family_member.dob,\n       ec_family_member.base_entity_id,\n       ec_family_member.id                          as _id,\n       'Malaria'                                    AS register_type,\n       ec_family_member.relational_id               as relationalid,\n       ec_family.village_town                       as home_address,\n       NULL                                         AS mother_first_name,\n       NULL                                         AS mother_last_name,\n       NULL                                         AS mother_middle_name,\n       ec_malaria_confirmation.last_interacted_with AS last_interacted_with\nFROM ec_family_member\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\n         inner join ec_malaria_confirmation\n                    on ec_family_member.base_entity_id = ec_malaria_confirmation.base_entity_id\nwhere ec_family_member.date_removed is null\n  AND ec_family_member.base_entity_id IN (%s)\n  AND ec_family_member.base_entity_id NOT IN (\n    SELECT ec_anc_register.base_entity_id AS base_entity_id\n    FROM ec_anc_register\n    UNION ALL\n    SELECT ec_pregnancy_outcome.base_entity_id AS base_entity_id\n    FROM ec_pregnancy_outcome\n    UNION ALL\n    SELECT ec_child.base_entity_id AS base_entity_id\n    FROM ec_child\n    UNION ALL\n    SELECT ec_family_planning.base_entity_id AS base_entity_id\n    FROM ec_family_planning\n)\nUNION ALL\n\n/*ONLY FAMILY PLANNING PATIENTS*/\nSELECT ec_family_member.first_name,\n       ec_family_member.middle_name,\n       ec_family_member.last_name,\n       ec_family_member.gender,\n       ec_family_member.dob,\n       ec_family_member.base_entity_id,\n       ec_family_member.id                          as _id,\n       'Family Planning'                             AS register_type,\n       ec_family_member.relational_id               as relationalid,\n       ec_family.village_town                       as home_address,\n       NULL                                         AS mother_first_name,\n       NULL                                         AS mother_last_name,\n       NULL                                         AS mother_middle_name,\n       ec_family_planning.last_interacted_with AS last_interacted_with\nFROM ec_family_member\n         inner join ec_family on ec_family.base_entity_id = ec_family_member.relational_id\n         inner join ec_family_planning\n                    on ec_family_member.base_entity_id = ec_family_planning.base_entity_id\nwhere ec_family_member.date_removed is null\n  AND ec_family_planning.is_closed is 0\n  AND ec_family_member.base_entity_id IN (%s)\n  AND ec_family_member.base_entity_id NOT IN (\n    SELECT ec_anc_register.base_entity_id AS base_entity_id\n    FROM ec_anc_register\n    UNION ALL\n    SELECT ec_pregnancy_outcome.base_entity_id AS base_entity_id\n    FROM ec_pregnancy_outcome\n    UNION ALL\n    SELECT ec_child.base_entity_id AS base_entity_id\n    FROM ec_child\n    UNION ALL\n    SELECT ec_malaria_confirmation.base_entity_id AS base_entity_id\n    FROM ec_malaria_confirmation\n)\nORDER BY last_interacted_with DESC;";
        return "Select ec_family.id as _id , ec_family.relationalid , ec_family.last_interacted_with , ec_family.base_entity_id , ec_family.first_name , ec_family.last_name , ec_family.unique_id , ec_family.village_town , ec_family.family_head , ec_family.primary_caregiver FROM ec_family  WHERE id IN (%s)";
    }

    @Override
    public String mainSelect(@NonNull InnerJoinObject[] innerJoinObjects, @NonNull QueryTable[] queryTables) {
        return "Select ec_family.id as _id , ec_family.relationalid , ec_family.last_interacted_with , ec_family.base_entity_id , ec_family.first_name , ec_family.last_name , ec_family.unique_id , ec_family.village_town , ec_family.family_head , ec_family.primary_caregiver FROM ec_family  WHERE id IN (%s)";
    }
}
